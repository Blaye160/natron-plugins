# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Crok_bleachbypass_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Crok_bleachbypass_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Crok_bleachbypass_GL"

def getLabel():
    return "Crok_bleachbypass_GL"

def getVersion():
    return 1.01

def getIconPath():
    return "Crok_bleachbypass_GL.png"

def getGrouping():
    return "Community/GLSL/Effect"

def getPluginDescription():
    return "GPU accelerated bleachbypass effect for Shadertoy."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat0", "exposure :")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("exposure")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat0 = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat1", "amount :")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("amount")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat1 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Crok_bleachbypass_GL v1.01")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("line101", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.line101 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", "(Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output2"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4139, 4048)
    lastNode.setSize(80, 44)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput2 = lastNode

    del lastNode
    # End of node "Output2"

    # Start of node "Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Source")
    lastNode.setLabel("Source")
    lastNode.setPosition(4139, 3646)
    lastNode.setSize(80, 44)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupSource = lastNode

    del lastNode
    # End of node "Source"

    # Start of node "Shadertoy2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy2")
    lastNode.setLabel("Shadertoy1")
    lastNode.setPosition(4139, 3849)
    lastNode.setSize(80, 44)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy2 = lastNode

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//                                                \r\n//                                                  \r\n//                      MMMMMMMMMMMMMMMMMMMMMMMMMMMM                                        \r\n//                    MM.                          .MM                                \r\n//                   MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM                  \r\n//                  MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM     \r\n//                 MM.  .MMMM        MMMMMMM    MMM.  .MM\r\n//                MM.  .MMM           MMMMMM     MMM.  .MM\r\n//               MM.  .MmM              MMMM      MMM.  .MM\r\n//              MM.  .MMM                 MM       MMM.  .MM\r\n//             MM.  .MMM            \t   M        MMM.  .MM\r\n//            MM.  .MMM                              MMM.  .MM\r\n//             MM.  .MMM                            MMM.  .MM\r\n//              MM.  .MMM       M                  MMM.  .MM\r\n//               MM.  .MMM      MM                MMM.  .MM\r\n//                MM.  .MMM     MMM              MMM.  .MM  \r\n//                 MM.  .MMM    MMMM            MMM.  .MM    \r\n//                  MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM      \r\n//                   MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM            \r\n//                    MM.                          .MM                 \r\n//                      MMMMMMMMMMMMMMMMMMMMMMMMMMMM                                                      \r\n//                                                                \r\n//\r\n// Adaptation pour Natron par F. Fernandez\r\n// Code original : crok_2color Matchbox pour Autodesk Flame\r\n\r\n// Adapted to Natron by F.Fernandez\r\n// Original code : crok_2color Matchbox for Autodesk Flame\r\n\r\n\r\n// iChannel0: Source, filter=nearest\r\n// BBox: iChannel0\r\n\r\n\r\nuniform float Amount = 1; // Amount : (Amount), min = 0., max = 1.\r\nuniform float Exposure = 1; // Exposure : (Exposure), min = 0., max = 5.\r\n\r\nuniform float dark_low = 0; // Dark low : (Dark low), min = 0., max = 1.\r\nuniform float dark_high = 1; // Dark high : (Dark high), min = 0., max = 5.\r\n\r\nuniform float light_low = 0; // Light low : (Light low), min = 0., max = 1.\r\nuniform float light_high = 1; // Light high : (Light high), min = 0., max = 5.\r\n\r\nuniform float contrast = 1; // Contrast : (Contrast), min = 0., max = 5.\r\nuniform float saturation = 1; // Saturation : (Saturation), min = 0., max = 1.\r\n\r\nuniform vec3 light_tint = vec3(0.0, 1.0, 1.0); // Light tint : (Light tint)\r\nuniform vec3 dark_tint = vec3(0.5, 0.0, 1.0); // Dark tint : (Dark tint)\r\n\r\n\r\nconst vec3 lumc = vec3(0.2125, 0.7154, 0.0721);\r\n\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\tvec2 uv = fragCoord.xy / iResolution.xy;\r\n\t\r\n\tvec3 original = texture2D(iChannel0, uv).rgb;\r\n\tvec3 col = original;\r\n\r\n\tfloat bri = (col.x+col.y+col.z)/3.0;\r\n\tfloat v = smoothstep(dark_low, dark_high, bri);\r\n\tcol = mix(dark_tint * bri, col, v);\r\n\t\r\n\tv = smoothstep(light_low, light_high, bri);\r\n\tcol = mix(col, min(light_tint * col, 1.0), v);\r\n\tcol = mix(original, col, Amount);\r\n\t\r\n\tvec3 avg_lum = vec3(0.5, 0.5, 0.5);\r\n\tvec3 intensity = vec3(dot(col.rgb, lumc));\r\n\tvec3 sat_color = mix(intensity, col.rgb, saturation);\r\n\tvec3 con_color = mix(avg_lum, sat_color, contrast);\r\n\tvec3 fin_col = con_color;\r\n\t\r\n\t\r\n\tfragColor = vec4(fin_col, 1.0) * Exposure;\r\n}")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("Amount")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Amount :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("Amount")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("Exposure")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Exposure :")
        del param

    param = lastNode.getParam("paramHint1")
    if param is not None:
        param.setValue("Exposure")
        del param

    param = lastNode.getParam("paramDefaultFloat1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat1")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("dark_low")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Dark low :")
        del param

    param = lastNode.getParam("paramHint2")
    if param is not None:
        param.setValue("Dark low")
        del param

    param = lastNode.getParam("paramMinFloat2")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("dark_high")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("Dark high :")
        del param

    param = lastNode.getParam("paramHint3")
    if param is not None:
        param.setValue("Dark high")
        del param

    param = lastNode.getParam("paramDefaultFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat3")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat3")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("light_low")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Light low :")
        del param

    param = lastNode.getParam("paramHint4")
    if param is not None:
        param.setValue("Light low")
        del param

    param = lastNode.getParam("paramMinFloat4")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat4")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("light_high")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Light high :")
        del param

    param = lastNode.getParam("paramHint5")
    if param is not None:
        param.setValue("Light high")
        del param

    param = lastNode.getParam("paramDefaultFloat5")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat5")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat5")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("contrast")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Contrast :")
        del param

    param = lastNode.getParam("paramHint6")
    if param is not None:
        param.setValue("Contrast")
        del param

    param = lastNode.getParam("paramDefaultFloat6")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat6")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat6")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("saturation")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Saturation :")
        del param

    param = lastNode.getParam("paramHint7")
    if param is not None:
        param.setValue("Saturation")
        del param

    param = lastNode.getParam("paramDefaultFloat7")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat7")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat7")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("light_tint")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Light tint :")
        del param

    param = lastNode.getParam("paramHint8")
    if param is not None:
        param.setValue("Light tint")
        del param

    param = lastNode.getParam("paramDefaultVec38")
    if param is not None:
        param.setValue(1, 1)
        param.setValue(1, 2)
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("dark_tint")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Dark tint :")
        del param

    param = lastNode.getParam("paramHint9")
    if param is not None:
        param.setValue("Dark tint")
        del param

    param = lastNode.getParam("paramDefaultVec39")
    if param is not None:
        param.setValue(0.5, 0)
        param.setValue(1, 2)
        del param

    del lastNode
    # End of node "Shadertoy2"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput2.connectInput(0, groupShadertoy2)
    groupShadertoy2.connectInput(0, groupSource)

    try:
        extModule = sys.modules["Crok_bleachbypass_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
